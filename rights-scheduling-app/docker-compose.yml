version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"

  api:
    build:
      context: ./api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./api:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: ./api
    env_file: .env
    depends_on:
      api:
        condition: service_started
      redis:
        condition: service_started
    command: celery -A celery_app.celery_app worker --loglevel=INFO
    volumes:
      - ./api:/app

  web:
    build:
      context: ./web
    env_file: .env
    depends_on:
      api:
        condition: service_started
    ports:
      - "${WEB_PORT}:5173"
    volumes:
      - ./web:/usr/src/app
    command: npm run dev -- --host 0.0.0.0 --port 5173

volumes:
  db_data:
